name: "build"

on:
  pull_request:
    paths-ignore:
      - ".docs/**"
  push:
    branches:
      - "*"
  schedule:
    - cron: "0 8 * * 1" # At 08:00 on Monday

env:
  extensions: "json"
  cache-version: "1"
  composer-version: "v2"
  composer-install: "composer update --no-interaction --no-progress --prefer-dist --prefer-stable"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ "7.4", "8.0", "8.1" ]
        ruleset: [ "base", "php74", "php80", "php81", "next", "gamee" ]

      fail-fast: false

    name: "Codesniffer (${{ matrix.ruleset }} / ${{ matrix.php-version }})"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }} "

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Get Composer cache directory"
        id: "composercache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.composercache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Test ruleset"
        run: "make test-${{ matrix.ruleset }}"
