<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Contributte" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">
	<description>Contributte Coding Standards - Tuned and very strict coding standards for PHP projects</description>

	<!--
		Heavily inspired by these libraries, thank you guys!
		- consistence/coding-standard
		- slevomat/coding-standard
		- doctrine/coding-standard
	-->

	<!-- ################################################################### -->

	<!-- File encoding -->
	<arg name="encoding" value="utf-8"/>

	<!-- Show progress. -->
	<arg value="p"/>

	<!-- Show all reports. -->
	<arg value="s"/>

	<!-- Enable colors -->
	<arg name="colors"/>

	<!-- ################################################################### -->

	<!-- Generic -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement">
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>
	</rule>
	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.Commenting.DocComment">
		<exclude name="Generic.Commenting.DocComment.MissingShort"/>
		<exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
		<exclude name="Generic.Commenting.DocComment.LongNotCapital"/>
		<exclude name="Generic.Commenting.DocComment.ShortNotCapital"/>
		<exclude name="Generic.Commenting.DocComment.TagsNotGrouped"/>
		<exclude name="Generic.Commenting.DocComment.NonParamGroup"/>
		<exclude name="Generic.Commenting.DocComment.ContentAfterOpen"/>
		<exclude name="Generic.Commenting.DocComment.ContentBeforeClose"/>
		<exclude name="Generic.Commenting.DocComment.SpacingBeforeTags"/>
	</rule>
	<rule ref="Generic.Files.InlineHTML"/>
	<rule ref="Generic.Formatting.SpaceAfterCast"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
	<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.ForbiddenFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="chop" value="rtrim"/>
				<element key="close" value="closedir"/>
				<element key="compact" value="null"/>
				<element key="delete" value="unset"/>
				<element key="doubleval" value="floatval"/>
				<element key="extract" value="null"/>
				<element key="fputs" value="fwrite"/>
				<element key="ini_alter" value="ini_set"/>
				<element key="is_double" value="is_float"/>
				<element key="is_integer" value="is_int"/>
				<element key="is_long" value="is_int"/>
				<element key="is_null" value="null"/>
				<element key="is_real" value="is_float"/>
				<element key="is_writeable" value="is_writable"/>
				<element key="join" value="implode"/>
				<element key="key_exists" value="array_key_exists"/>
				<element key="pos" value="current"/>
				<element key="settype" value="null"/>
				<element key="show_source" value="highlight_file"/>
				<element key="sizeof" value="count"/>
				<element key="strchr" value="strstr"/>
			</property>
		</properties>
	</rule>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.Strings.UnnecessaryStringConcat">
		<properties>
			<property name="allowMultiline" value="true"/>
		</properties>
	</rule>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>

	<!-- ################################################################### -->

	<!-- PEAR -->
	<rule ref="PEAR.Classes.ClassDeclaration"/>
	<rule ref="PEAR.Commenting.InlineComment"/>
	<rule ref="PEAR.Formatting.MultiLineAssignment"/>
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>

	<!-- ################################################################### -->

	<!-- PSR2 -->
	<rule ref="PSR2">
		<exclude name="Generic.ControlStructures.InlineControlStructure"/>
		<exclude name="Generic.Files.LineLength"/>
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="PEAR.Functions.ValidDefaultValue"/>
		<exclude name="PSR2.Classes.ClassDeclaration"/>
		<exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
		<exclude name="PSR2.ControlStructures.SwitchDeclaration.caseIndent"/>
		<exclude name="PSR2.ControlStructures.SwitchDeclaration.defaultIndent"/>
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
		<exclude name="Squiz.ControlStructures.LowercaseDeclaration"/>
		<exclude name="Squiz.Functions.LowercaseFunctionKeywords"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterBracket"/>
		<exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen"/>
		<exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace"/>
		<exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose"/>
	</rule>
	<rule ref="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed">
		<type>error</type>
	</rule>

	<!-- ################################################################### -->

	<!-- Squiz -->
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Squiz.Arrays.ArrayDeclaration">
		<exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.NoComma"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
		<exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
	</rule>
	<rule ref="Squiz.Classes.ClassFileName"/>
	<rule ref="Squiz.Classes.SelfMemberReference"/>
	<rule ref="Squiz.Commenting.DocCommentAlignment">
		<exclude
			name="Squiz.Commenting.DocCommentAlignment.SpaceAfterStar"/>
	</rule>
	<rule ref="Squiz.Commenting.EmptyCatchComment"/>
	<rule ref="Squiz.Commenting.FunctionComment">
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectTypeHint"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidThrows"/>
		<exclude name="Squiz.Commenting.FunctionComment.Missing"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingReturn"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamNameNoMatch"/>
		<exclude name="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamName"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
		<exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.ThrowsNotCapital"/>
		<exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing"/>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.DuplicateReturn">
		<message>Only 1 @return annotation is allowed in a function comment</message>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.ExtraParamComment">
		<message>Extra @param annotation</message>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.InvalidNoReturn">
		<message>Function has no return statement, but annotation @return is present</message>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment">
		<exclude
			name="Squiz.Commenting.VariableComment.IncorrectVarType"/>
		<exclude name="Squiz.Commenting.VariableComment.TagNotAllowed"/>
		<exclude name="Squiz.Commenting.VariableComment.MissingVar"/>
		<exclude name="Squiz.Commenting.VariableComment.Missing"/>
	</rule>
	<rule ref="Squiz.Functions.GlobalFunction"/>
	<rule ref="Squiz.Operators.IncrementDecrementUsage">
		<exclude name="Squiz.Operators.IncrementDecrementUsage.NoBrackets"/>
	</rule>
	<rule ref="Squiz.Operators.ValidLogicalOperators"/>
	<rule ref="Squiz.PHP.GlobalKeyword"/>
	<rule ref="Squiz.PHP.Heredoc">
		<exclude name="Squiz.PHP.Heredoc.NotAllowed"/>
	</rule>
	<rule ref="Squiz.PHP.InnerFunctions"/>
	<rule ref="Squiz.PHP.LowercasePHPFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>
	<rule ref="Squiz.Strings.DoubleQuoteUsage"/>
	<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
		<message>Variable "%s" not allowed in double quoted string; use sprintf() instead</message>
	</rule>
	<rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
			<property name="spacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Squiz.Strings.EchoedStrings"/>
	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
	<rule ref="Squiz.WhiteSpace.FunctionSpacing">
		<exclude name="Squiz.WhiteSpace.FunctionSpacing.After"/>
		<properties>
			<property name="spacing" value="1"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
		<exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>
	</rule>
	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
		<properties>
			<property name="ignoreBlankLines" value="false"/>
		</properties>
	</rule>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
		<severity>5</severity>
	</rule>

	<!-- ################################################################### -->

	<!-- Slevomat -->
	<rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
	<rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility">
		<properties>
			<property name="fixable" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
		<properties>
			<property name="linesCountAfterOpeningBrace" value="1"/>
			<property name="linesCountBeforeClosingBrace" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming">
		<exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming.SuperfluousPrefix"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming">
		<exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
		<properties>
			<property name="forbiddenAnnotations" type="array">
				<element value="@todo"/>
				<element value="@author"/>
				<element value="@copyright"/>
				<element value="@created"/>
				<element value="@license"/>
				<element value="@package"/>
				<element value="@since"/>
				<element value="@subpackage"/>
				<element value="@version"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
		<properties>
			<property name="forbiddenCommentPatterns" type="array">
				<element value="~^(?:(?!private|protected|static)\S+ )?(?:con|de)structor\.\z~i"/>
				<element value="~^Created by \S+\.\z~i"/>
				<element value="~^\S+ [gs]etter\.\z~i"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration"/>
	<rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
	<rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
	<rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
	<rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
	<rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFallbackGlobalName"/>
		<properties>
			<property name="allowFullyQualifiedExceptions" value="false"/>
			<property name="allowFallbackGlobalConstants" value="false"/>
			<property name="allowFallbackGlobalFunctions" value="false"/>
			<property name="allowFullyQualifiedGlobalClasses" value="true"/>
			<property name="allowFullyQualifiedGlobalConstants" value="false"/>
			<property name="allowFullyQualifiedGlobalFunctions" value="false"/>
			<property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
			<property name="allowFullyQualifiedNameForCollidingConstants" value="true"/>
			<property name="allowFullyQualifiedNameForCollidingFunctions" value="true"/>
			<property name="searchAnnotations" value="true"/>
			<property name="allowPartialUses" value="false"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
		<properties>
			<property name="searchAnnotations" value="true"/>
			<property name="ignoredAnnotationNames" type="array">
				<element value="@testCase"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
		<properties>
			<property name="linesCountAfterLastUse" value="1"/>
			<property name="linesCountBeforeFirstUse" value="1"/>
			<property name="linesCountBetweenUseTypes" value="0"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>
	<rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
	<rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
		<properties>
			<property name="declareOnFirstLine" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
	<rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing">
		<properties>
			<property name="spacesCountBeforeColon" value="0"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
	<rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>
	<rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration"/>
	<rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
	<rule ref="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment">
		<exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment.OneLinePropertyComment"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing"/>
	<rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment">
		<exclude name="SlevomatCodingStandard.Commenting.UselessInheritDocComment.UselessInheritDocComment"/>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses">
		<exclude name="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses.UselessParentheses"/>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireMultiLineTernaryOperator">
		<exclude name="SlevomatCodingStandard.ControlStructures.RequireMultiLineTernaryOperator.MultiLineTernaryOperatorNotUsed"/>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireTernaryOperator"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>
	<rule ref="SlevomatCodingStandard.Functions.StaticClosure">
		<exclude name="SlevomatCodingStandard.Functions.StaticClosure.ClosureNotStatic"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
	<rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
	<rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation">
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation.NonFullyQualifiedClassName"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions">
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions.NonFullyQualifiedException"/>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing"/>
	<rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
	<rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator"/>
	<rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>
	<rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>
	<rule ref="SlevomatCodingStandard.PHP.ShortList"/>
	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
	<rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
	<rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
	<rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>
	<rule ref="SlevomatCodingStandard.Functions.RequireArrowFunction"/>
	<rule ref="SlevomatCodingStandard.Numbers.DisallowNumericLiteralSeparator"/>
	<rule ref="SlevomatCodingStandard.PHP.RequireNowdoc"/>
	<rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing"/>
	<rule ref="SlevomatCodingStandard.PHP.DisallowReference"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment">
		<properties>
			<property name="traversableTypeHints" type="array">
				<element value="Traversable"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing">
		<properties>
			<property name="controlStructures" type="array">
				<element value="if"/>
				<element value="do"/>
				<element value="while"/>
				<element value="for"/>
				<element value="foreach"/>
				<element value="switch"/>
				<element value="try"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing">
		<properties>
			<property name="linesCountBefore" value="1"/>
			<property name="linesCountAfter" value="1"/>
			<property name="jumpStatements" type="array">
				<element value="continue"/>
				<element value="return"/>
				<element value="throw"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceEqualOperator"/>
	<rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
		<properties>
			<property name="minLinesCountBeforeWithComment" value="1"/>
			<property name="maxLinesCountBeforeWithComment" value="1"/>
			<property name="minLinesCountBeforeWithoutComment" value="1"/>
			<property name="maxLinesCountBeforeWithoutComment" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.ConstantSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.ParentCallSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="groups" type="array">
				<element value="uses"/>

				<element value="enum cases"/>

				<element value="public constants"/>
				<element value="protected constants"/>
				<element value="private constants"/>

				<element value="public static properties"/>
				<element value="public properties"/>

				<element value="protected static properties"/>
				<element value="protected properties"/>

				<element value="private static properties"/>
				<element value="private properties"/>

				<element value="constructor"/>
				<element value="destructor"/>

				<element value="static constructors"/>

				<element value="public static abstract methods"/>
				<element value="public static final methods"/>
				<element value="public static methods"/>
				<element value="public abstract methods"/>
				<element value="public final methods"/>
				<element value="public methods"/>

				<element value="protected static abstract methods"/>
				<element value="protected static final methods"/>
				<element value="protected static methods"/>
				<element value="protected abstract methods"/>
				<element value="protected final methods"/>
				<element value="protected methods"/>

				<element value="private static methods"/>
				<element value="private methods"/>

				<element value="magic methods"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>
	<rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace">
		<properties>
			<property name="spacesAroundBrackets" value="0"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing">
		<properties>
			<property name="spacesCount" value="0"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction"/>
	<rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration"/>
	<rule ref="SlevomatCodingStandard.Classes.MethodSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition"/>
	<rule ref="SlevomatCodingStandard.PHP.DisallowDirectMagicInvokeCall"/>
	<rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable"/>
	<rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces">
		<properties>
			<property name="ignoreSpacesInAnnotation" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing">
		<properties>
			<property name="linesCountBetweenMembers" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Functions.StrictCall"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.RequireSingleLineCondition">
		<properties>
			<property name="maxLineLength" value="70"/>
			<property name="alwaysForSimpleConditions" value="1"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration"/>
	<rule ref="SlevomatCodingStandard.Classes.SuperfluousErrorNaming"/>
</ruleset>
